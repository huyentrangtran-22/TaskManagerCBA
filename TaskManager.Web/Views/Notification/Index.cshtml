@model IEnumerable<TaskManager.Shared.Entities.Notification>

@{
    ViewData["Title"] = "Notifications";
}

<h1>Notifications</h1>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<table class="table table-striped table-bordered">
    <thead class="table-light">
        <tr>
            <th>Message</th>
            <th>Created At</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var notification in Model)
        {
            <tr class="@(notification.IsRead ? "table-secondary" : "")">
                <td>@notification.Message</td>
                <td>@notification.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</td>
                <td>@(notification.IsRead ? "Read" : "Unread")</td>
                <td>
                    @if (!notification.IsRead)
                    {
                        <form asp-action="MarkAsRead" method="post" class="d-inline">
                            <input type="hidden" name="id" value="@notification.Id" />
                            <button type="submit" class="btn btn-sm btn-success">Mark as Read</button>
                            @Html.AntiForgeryToken()
                        </form>
                    }

                    <form asp-action="Delete" method="post" class="d-inline">
                        <input type="hidden" name="id" value="@notification.Id" />
                        <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                        @Html.AntiForgeryToken()
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>
